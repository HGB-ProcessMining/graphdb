//the "file:///loan_full.csv" must be placed in the import folder of the Neo4j database, e.g.:
//C:\Users\username\.Neo4jDesktop\neo4jDatabases\database-9d1700fa-03f9-48e7-b8ad-6b7c25890ee2\installation-3.5.4\import


//create unique constraints for event, case and resource ids (perform one by one)
CREATE CONSTRAINT constraint_event FOR (e:Event) REQUIRE e.name IS UNIQUE;
CREATE CONSTRAINT constraint_case FOR (c:Case) REQUIRE c.name IS UNIQUE;
CREATE CONSTRAINT constraint_resource FOR (r:Resource) REQUIRE r.name IS UNIQUE;

//1 create case nodes with case attributes (Added 31509 labels, created 31509 nodes, set 157545 properties, completed after 15973 ms.)
LOAD CSV WITH HEADERS FROM "file:///loan_full.csv" as line
WITH line
    MERGE (c:Case {name: line.case, variant: line.variant_index, loangoal: line.LoanGoal, applicationtype: line.ApplicationType, requestedamount: toInteger(line.RequestedAmount)})

//2 create event nodes with event attributes and relationships to cases (Added 561671 labels, created 561671 nodes, set 6029756 properties, created 561671 relationships, completed after 38875 ms.)
:auto LOAD CSV WITH HEADERS FROM "file:///loan_full.csv" as line
CALL {
WITH line
MATCH (c:Case {name: line.case})
CREATE (e:Event {name: line.EventID, 
	starttime: localdatetime({year:toInteger(line.sY), month:toInteger(line.sM), day:toInteger(line.sD), hour:toInteger(line.sHH), minute:toInteger(line.sMM), second:toInteger(line.sSS), microsecond:toInteger(line.sMS)}), 
	completetime: localdatetime({year:toInteger(line.cY), month:toInteger(line.cM), day:toInteger(line.cD), hour:toInteger(line.cHH), minute:toInteger(line.cMM), second:toInteger(line.cSS), microsecond:toInteger(line.cMS)}), 
	activity: line.event, class: line.EventOrigin, action: line.Action, offerid: line.OfferID, caseindex: toInteger(line.case_index), offerindex: toInteger(line.offer_index), applicationindex: toInteger(line.workflow_index), workflowindex: toInteger(line.workflow_index)})
CREATE (e) -[:EVENT_TO_CASE]-> (c)
} IN TRANSACTIONS OF 1000 ROWS;

//3 create nodes for each resource and edges to event nodes (Added 145 labels, created 145 nodes, set 145 properties, created 561671 relationships, completed after 17200 ms.)
:auto LOAD CSV WITH HEADERS FROM "file:///loan_full.csv" as line
CALL {
WITH line
MATCH (e:Event {name: line.EventID})
MERGE (r:Resource {name: line.resource})
CREATE (r) -[:RESOURCE_TO_EVENT]-> (e)
} IN TRANSACTIONS OF 1000 ROWS;



//4 create directly follows relationships for events (Set 530162 properties, created 530162 relationships, completed after 22645 ms.)
MATCH (e1:Event) --> (c:Case) <-- (e2:Event)
WHERE e2.caseindex - e1.caseindex = 1
CREATE (e2) -[:DF {timebetween: duration.between(e1.completetime, e2.starttime) }]-> (e1)

//5 create offers, relationships offer -> case (Added 42995 labels, created 42995 nodes, set 257970 properties, created 42995 relationships, completed after 10830 ms.)
:auto LOAD CSV WITH HEADERS FROM "file:///loan_full.csv" as line
CALL {
WITH line
MATCH(c:Case {name: line.case}), (r:Resource {name: line.resource})
WHERE line.event= "O_Created"
CREATE (o:Offer {name: line.OfferID, firstamount: line.FirstWithdrawalAmount, n_terms: line.NumberOfTerms, monthlycost: line.MonthlyCost, offeredamount: line.OfferedAmount, creditscore: line.CreditScore})
CREATE (o) -[:OFFER_TO_CASE]-> (c)
} IN TRANSACTIONS OF 1000 ROWS;

//6 create relationships offer -> event to associate (Offer)events with offers (Created 193849 relationships, completed after 1299 ms.)
MATCH (e:Event), (o:Offer)
WHERE o.name = e.offerid AND e.offerindex > 0  
CREATE (e) -[:EVENT_TO_OFFER]-> (o)

//7 create application nodes,  (Added 31509 labels, created 31509 nodes, set 126036 properties, completed after 298 ms.) 
MATCH (c:Case)
CREATE (a:Application {name: c.name, loangoal: c.loangoal, applicationtype: c.applicationtype, requestedamount: c.requestedamount})

//8 create relationships application -> case (Created 31509 relationships, completed after 423 ms.)
MATCH (c:Case), (a:Application)
WHERE c.name = a.name
CREATE (a) -[:APPLICATION_TO_CASE]-> (c)

//9 create relationships application -> event to associate (application)events with application (Created 239595 relationships, completed after 1209 ms.)
MATCH (e:Event) -[:EVENT_TO_CASE]-> (c:Case) <-[:APPLICATION_TO_CASE]- (a:Application) 
WHERE e.class = "Application"
CREATE (e) -[:EVENT_TO_APPLICATION]->  (a)

//10 create workflow nodes,  (Added 31509 labels, created 31509 nodes, set 31509 properties, completed after 152 ms.)
MATCH (c:Case)
CREATE (w:Workflow {name: c.name})

//11 relationships workflow -> case(Created 31509 relationships, completed after 383 ms.)
MATCH (c:Case), (w:Workflow)
WHERE c.name = w.name
CREATE (w) -[:WORKFLOW_TO_CASE]-> (c)

//12 create relationships workflow -> event to associate (workflow)events with workflow (Created 128227 relationships, completed after 813 ms.)
MATCH (e:Event) -[:EVENT_TO_CASE]-> (c:Case) <-[:WORKFLOW_TO_CASE]- (w:Workflow) 
WHERE e.class = "Workflow"
CREATE (e) -[:EVENT_TO_WORKFLOW]->  (w)


//13 create event chain of offers (Set 150854 properties, created 150854 relationships, completed after 2248 ms.)
MATCH (e1:Event) -[:EVENT_TO_OFFER]-> (o:Offer) <-[:EVENT_TO_OFFER]- (e2:Event)
WHERE e2.offerindex - e1.offerindex = 1
CREATE (e2) -[:O_DF {timebetween: duration.between(e1.completetime, e2.starttime) }]-> (e1)

//14 create application based directly follows relationships (Set 208086 properties, created 208086 relationships, completed after 10294 ms.)
MATCH (e1:Event) -[:EVENT_TO_CASE]-> (c:Case) <-[:EVENT_TO_CASE]- (e2:Event)
WHERE e2.applicationindex - e1.applicationindex = 1 AND e1.applicationindex > 0
CREATE (e1) <-[:A_DF {timebetween: duration.between(e1.completetime, e2.starttime) }]- (e2)

//15 create workflow based directly follows relationships (Set 96727 properties, created 96727 relationships, completed after 5218 ms.)
MATCH (e1:Event) -[:EVENT_TO_CASE]-> (c:Case) <-[:EVENT_TO_CASE]- (e2:Event)
WHERE e2.workflowindex - e1.workflowindex = 1 AND e1.workflowindex > 0
CREATE (e1) <-[:W_DF {timebetween: duration.between(e1.completetime, e2.starttime) }]- (e2)

//16 create case-based handover of work relationships (Created 11181 relationships, completed after 15588 ms.)
MATCH (r1:Resource) -[:RESOURCE_TO_EVENT]-> (e1:Event) <-[:DF]- (e2:Event) <-[:RESOURCE_TO_EVENT]- (r2:Resource)
MERGE (r1) -[:HOW]-> (r2)

//17 create offer-based handover of work relationships (Created 6313 relationships, completed after 3739 ms.)
MATCH (r1:Resource) -[:RESOURCE_TO_EVENT]-> (e1:Event) <-[:O_DF]- (e2:Event) <-[:RESOURCE_TO_EVENT]- (r2:Resource)
MERGE (r1) -[:O_HOW]-> (r2)

//18 create application-based handover of work relationships (Created 8205 relationships, completed after 5716 ms.)
MATCH (r1:Resource) -[:RESOURCE_TO_EVENT]-> (e1:Event) <-[:A_DF]- (e2:Event) <-[:RESOURCE_TO_EVENT]- (r2:Resource)
MERGE (r1) -[:A_HOW]-> (r2)

//19 create workflow-based handover of work relationships (Created 9353 relationships, completed after 3591 ms.)
MATCH (r1:Resource) -[:RESOURCE_TO_EVENT]-> (e1:Event) <-[:W_DF]- (e2:Event) <-[:RESOURCE_TO_EVENT]- (r2:Resource)
MERGE (r1) -[:W_HOW]-> (r2)

//20 clean up temporary data (Set 974717 properties, completed after 1394 ms.)
MATCH (e:Event)
REMOVE e.offerid, e.offerindex 


